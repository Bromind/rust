# Includes one of the default files in src/bootstrap/defaults
profile = "codegen"
changelog-seen = 2

[build]
# TODO: add "aarch64-unknown-freebsd-purecap" when building std for Morello works
# TODO: remove "aarch64-unknown-freebsd" when it's no longer useful for testing cross-compiling
target = ["x86_64-unknown-linux-gnu", "aarch64-unknown-freebsd"]

[target.x86_64-unknown-linux-gnu]
# Use Morello build of LLVM just to check nothing is entirely broken.
llvm-config = "/home/cheribuild/output/morello-sdk/bin/llvm-config"

[target.aarch64-unknown-freebsd]
# Use Morello SDK build of LLVM, which should support all the normal targets too
llvm-config = "/home/cheribuild/output/morello-sdk/bin/llvm-config"
# These wrappers force clang to use the right target and system libraries.
# Without it, the build system appears to default to host libc/libm/etc, which are the wrong arch.
# It'd be cleaner just to pass the extra flags, but I haven't found an option for that.
#
# Note that this requires having a FreeBSD build, which you can get like this:
# `cheribuild.py freebsd-aarch64`
#
# The path here is just a path, change it to match your home and cheribuild paths.
# The scripts will also need updating to match your home and cherbuild paths.
cc = "/home/rust-20211014/clang-freebsd.sh"
cxx = "/home/rust-20211014/clang++-freebsd.sh"
linker = "/home/rust-20211014/clang-freebsd.sh"
# Use Morello SDK's binutils for compilation.
# The host's binutils might be fine here, but may as well use the Morello tools for consistency.
# Leaving these options out entirely seems to confuse the build system somehow.
ar = "/home/cheribuild/output/morello-sdk/bin/ar"
ranlib = "/home/cheribuild/output/morello-sdk/bin/ranlib"

[target.aarch64-unknown-freebsd-purecap]
# Basically the same as FreeBSD, but you'll need a Morello CHERI BSD build:
# `cheribuild.py cheribsd-morello-purecap`
llvm-config = "/home/cheribuild/output/morello-sdk/bin/llvm-config"
cc = "/home/rust-20211014/clang-morello.sh"
cxx = "/home/rust-20211014/clang++-morello.sh"
ar = "/home/cheribuild/output/morello-sdk/bin/ar"
ranlib = "/home/cheribuild/output/morello-sdk/bin/ranlib"
linker = "/home/rust-20211014/clang-morello.sh"

# You can compile programs with the above targets like this:
# `build/x86_64-unknown-linux-gnu/stage1/bin/rustc --out-dir /tmp/build --target aarch64-unknown-freebsd -C linker=/home/rust-20211014/clang-freebsd.sh test.rs`
# Output appears in /tmp/build, which helps avoid splurging intermediate files about accidentally.
